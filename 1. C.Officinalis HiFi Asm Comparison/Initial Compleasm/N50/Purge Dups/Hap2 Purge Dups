#!/bin/bash

#SBATCH --job-name=purge_dups_job
#SBATCH --partition=defq
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=32
#SBATCH --mem=128g
#SBATCH --time=96:00:00
#SBATCH --output=/gpfs01/home/mzywj2/slurm-%x-%j.out
#SBATCH --error=/gpfs01/home/mzywj2/slurm-%x-%j.err

#######################
# PREPARE ENVIRONMENT #
#######################

# Load anaconda module and activate purge_dups_env environment
module load anaconda-uoneasy/2023.09-0
source ~/.bash_profile
conda activate purge_dups_env


# Set variables
ASSEMBLY="COFF001.asm.bp.hap2.p_ctg.fa"
READS="COFF001.fastq.gz "
ALIGNMENTS="asm_bp_hap2_p_ctg.paf.gz"
SPLIT_ASSEMBLY="hap2_assembly_split.fasta"
SPLIT_ALIGNMENTS="hap2_alignment_split.paf.gz"
STATS="PB.stat" # This file will be an output file from the pbcstat command and it needs to be located and referred
CUTOFFS="COFF001_hap2_p_ctg_cutoffs"
DUPS="hap2_p_ctg_dups.bed"
PURGED_ASSEMBLY="hap2_p_ctg_purged_assembly.fasta"
BASE_COV="PB.base.cov" # This file will be an output file from the pbcstat you need to locate that file and refer to the right name for it

# Run minimap2 to get alignments
minimap2 -x map-hifi -t 32 $ASSEMBLY $READS | gzip -c - > $ALIGNMENTS

# Run purge_dups pipeline

# Generate statistics from the alignment
pbcstat $ALIGNMENTS

# Calculate cutoffs based on the statistics
calcuts $STATS > $CUTOFFS

# Split the assembly
split_fa $ASSEMBLY > $SPLIT_ASSEMBLY

# Align reads to the split assembly
minimap2 -x map-hifi -t 32 $SPLIT_ASSEMBLY $READS | gzip -c - > $SPLIT_ALIGNMENTS

# Purge duplicates based on the cutoffs
purge_dups -2 -T $CUTOFFS -c $BASE_COV $SPLIT_ALIGNMENTS > $DUPS

# Get sequences after purging duplicates
get_seqs $DUPS $ASSEMBLY > $PURGED_ASSEMBLY
